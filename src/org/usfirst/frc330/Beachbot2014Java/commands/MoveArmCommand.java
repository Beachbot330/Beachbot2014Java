/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.usfirst.frc330.Beachbot2014Java.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc330.Beachbot2014Java.Robot;

/**
 *
 * @author Joe-XPS13-W7
 */
public abstract class MoveArmCommand extends Command {
    double setpoint; 
    public MoveArmCommand() {
                // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.arm);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    public MoveArmCommand(double position) {
        requires(Robot.arm);
        setpoint = position;
    }

    // Called just before this Command runs the first time
    protected void initialize() {
        Robot.arm.disable();
        Robot.wings.setWingsOpen();
        Robot.arm.setArmSetPoint(setpoint);
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        if (Robot.wings.areWingsOpen()) {
            if (!Robot.arm.isEnable()) {
                Robot.arm.enable();
            }
        } else if (Robot.arm.isEnable()) {
            Robot.arm.disable();
        }
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return Robot.arm.onTarget();
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
    
}
